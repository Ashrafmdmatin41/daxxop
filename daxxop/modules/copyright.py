from pyrogram import Client, filters
from daxxop import daxxop as app
from pyrogram.types import Message

# -----------------------------------------------------

@app.on_edited_message(filters.group & ~filters.me)
async def delete_edited_messages(client, edited_message):
    if edited_message.from_user.is_admin:
        return
    await edited_message.delete()

@app.on_message(filters.animation | filters.audio | filters.document | filters.photo | filters.sticker | filters.video)
async def keep_reaction_message(client, message: Message):
    pass 

# -----------------------------------------------------

async def delete_pdf_files(client, message):
    if message.document and message.document.mime_type == "application/pdf":
        warning_message = f"@{message.from_user.username} ·¥ç·¥Ä·¥Ä ·¥ç·¥Ä·¥õ ·¥Ñ ú·¥ú·¥Ö·¥Ä ·¥ò·¥Ö“ì  ô ú·¥á·¥ä ·¥ã·¥á,\n  ô ú·¥ès·¥Ä·¥Ö…™·¥ã·¥á ·¥Ñ·¥è·¥ò è Ä…™…¢ ú·¥õ  ü·¥Ä…¢ è·¥á…¢·¥Ä \n\n ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥ã·¥Ä Ä ·¥Ö…™ è·¥Ä ·¥ç·¥Ä·¥Ö·¥Ä Ä·¥Ñ ú·¥è·¥Ö.\n\n ·¥Ä ô @iam_daxx  ô ú·¥Ä…™ ·¥ã·¥á ·¥Ö·¥ç ·¥ç·¥á ·¥Ä·¥ò…¥…™ ·¥ç·¥ú·¥ç·¥ç è ·¥ã·¥è  ô ú·¥á·¥ä ·¥Ö·¥á üçåüçåüçå."
        await message.reply_text(warning_message)
        await message.delete()
    else:  
        pass

@app.on_message(filters.group & filters.document)
async def message_handler(client, message):
    await delete_pdf_files(client, message)

